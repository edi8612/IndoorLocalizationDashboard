// <auto-generated />
using IndoorLocalizationSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndoorLocalizationSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250624135238_UpdatedDeviceSeedData")]
    partial class UpdatedDeviceSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<string>("CoursesId")
                        .HasColumnType("text");

                    b.Property<int>("StudentsId")
                        .HasColumnType("integer");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 0,
                            Name = "Lab A"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 0,
                            Name = "Room 101"
                        });
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ClassroomId = 1,
                            Name = "Computer Networks",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = "2",
                            ClassroomId = 2,
                            Name = "IoT Security",
                            ProfessorId = 1
                        });
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MACAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PositionX")
                        .HasColumnType("real");

                    b.Property<float>("PositionY")
                        .HasColumnType("real");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MACAddress = "AA:BB:CC:DD:EE:01",
                            Name = "Alice's iphone",
                            PositionX = 1.73f,
                            PositionY = 2.5f,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            MACAddress = "AA:BF:CC:DD:EC:02",
                            Name = "Bob's iphone",
                            PositionX = 1.83f,
                            PositionY = 2.1f,
                            StudentId = 2
                        });
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dr. Wayne",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attended")
                        .HasColumnType("boolean");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("integer");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attended = true,
                            ClassroomId = 1,
                            DeviceId = 1,
                            Name = "Alice Johnson",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Attended = false,
                            ClassroomId = 2,
                            DeviceId = 2,
                            Name = "Bob Smith",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "wayne@university.edu",
                            Password = "hashedPassword123",
                            Role = "Professor",
                            Username = "wayne"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alice@university.edu",
                            Password = "hashedPassword1234",
                            Role = "Student",
                            Username = "alice"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob@university.edu",
                            Password = "hashedPassword12345",
                            Role = "Student",
                            Username = "bob"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("IndoorLocalizationSystem.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndoorLocalizationSystem.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Course", b =>
                {
                    b.HasOne("IndoorLocalizationSystem.Models.Classroom", "Classroom")
                        .WithMany("Courses")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndoorLocalizationSystem.Models.Professor", "Professor")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Professor", b =>
                {
                    b.HasOne("IndoorLocalizationSystem.Models.User", "User")
                        .WithOne("Professor")
                        .HasForeignKey("IndoorLocalizationSystem.Models.Professor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Student", b =>
                {
                    b.HasOne("IndoorLocalizationSystem.Models.Classroom", "Classroom")
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndoorLocalizationSystem.Models.Device", "Device")
                        .WithOne("Student")
                        .HasForeignKey("IndoorLocalizationSystem.Models.Student", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndoorLocalizationSystem.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("IndoorLocalizationSystem.Models.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Classroom", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Device", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.Professor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("IndoorLocalizationSystem.Models.User", b =>
                {
                    b.Navigation("Professor");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
